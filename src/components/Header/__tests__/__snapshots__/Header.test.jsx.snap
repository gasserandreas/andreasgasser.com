// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Header simple snapshot test 1`] = `
<CustomThemeProvider
  dark={false}
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Array [
          "320px",
          "540px",
          "720px",
          "960px",
          "1140px",
          "1400px",
        ],
        "buttons": Object {
          "outline": Object {
            "bg": "transparent",
            "boxShadow": "inset 0 0 2px",
            "color": "primary",
            "variant": "buttons.primary",
          },
          "primary": Object {
            "bg": "primary",
            "borderRadius": "default",
            "color": "background",
            "fontSize": 2,
            "fontWeight": "bold",
          },
          "secondary": Object {
            "bg": "secondary",
            "color": "background",
            "variant": "buttons.primary",
          },
        },
        "colors": Object {
          "background": "#c3c3c3",
          "backgroundInverse": "#fff",
          "muted": "#696969",
          "text": "#333333",
          "textHighlighed": "#333",
          "textHover": "#7e7e7e",
          "textInverse": "#eee",
        },
        "fontSizes": Array [
          14,
          16,
          20,
          24,
          32,
          48,
          64,
          96,
        ],
        "fontWeights": Object {
          "body": 400,
          "bold": 900,
          "heading": 700,
        },
        "fonts": Object {
          "body": "Open Sans, Helvetica Neue, Helvetica, sans-serif",
          "heading": "inherit",
          "monospace": "Menlo, monospace",
        },
        "lineHeights": Object {
          "body": 1.5,
          "heading": 1.125,
        },
        "radii": Object {
          "circle": 99999,
          "default": 4,
        },
        "shadows": Object {
          "card": "0 0 4px rgba(0, 0, 0, .125)",
        },
        "sizes": Object {
          "avatar": 48,
        },
        "space": Array [
          0,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
        ],
        "styles": Object {
          "root": Object {
            "fontFamily": "body",
            "fontWeight": "body",
            "lineHeight": "body",
          },
        },
        "text": Object {
          "bold": Object {
            "color": "#333333",
            "fontWeight": "900",
          },
          "default": Object {
            "color": "#333333",
          },
          "muted": Object {
            "color": "#696969",
          },
          "page": Object {
            "fontSize": 4,
            "letterSpacing": "-0.04em",
            "lineHeight": "1.4em",
            "wordSpacing": "-0.08em",
          },
          "section": Object {
            "fontSize": 3,
            "lineHeight": "1.4em",
          },
          "small": Object {
            "color": "#333333",
            "fontSize": 0,
          },
          "subPage": Object {
            "color": "#696969",
            "fontSize": 3,
            "lineHeight": "1.6em",
          },
        },
        "variants": Object {
          "avatar": Object {
            "borderRadius": "circle",
            "height": "avatar",
            "width": "avatar",
          },
          "card": Object {
            "bg": "background",
            "boxShadow": "card",
            "p": 2,
          },
          "link": Object {
            "color": "primary",
          },
          "nav": Object {
            ":hover,:focus,.active": Object {
              "color": "primary",
            },
            "color": "inherit",
            "display": "inline-block",
            "fontSize": 1,
            "fontWeight": "bold",
            "p": 2,
            "textDecoration": "none",
          },
        },
      }
    }
  >
    <Header
      data={Object {}}
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": false,
                "lastClassName": "myVVx",
                "rules": Array [
                  "box-sizing: border-box;",
                  "margin: 0;",
                  "min-width: 0;",
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-bdVaJa gtVQmG"
          >
            <Styled(Text)>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "dlvzeL",
                      "rules": Array [
                        "
    font-size: 1.1rem;
    font-weight: 400;
    margin-bottom: 1rem;
  ",
                      ],
                    },
                    "displayName": "Styled(Text)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <Text
                  className="sc-htpNat dlvzeL"
                  variant="default"
                >
                  <ForwardRef
                    className="sc-htpNat dlvzeL"
                    variant="default"
                  >
                    <styled.div
                      className="sc-htpNat dlvzeL"
                      tx="text"
                      variant="default"
                    >
                      <StyledComponent
                        className="sc-htpNat dlvzeL"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "myVVx",
                              "rules": Array [
                                "box-sizing: border-box;",
                                "margin: 0;",
                                "min-width: 0;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        tx="text"
                        variant="default"
                      >
                        <div
                          className="sc-bdVaJa myVVx sc-htpNat dlvzeL"
                        >
                          Hi I
                          '
                          am
                          <Styled(Text)>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bxivhb",
                                    "isStatic": false,
                                    "lastClassName": "hmzLRK",
                                    "rules": Array [
                                      "
    display: block;
    margin: 0.25rem 0;

    strong {
      font-weight: 600;
    }
  ",
                                    ],
                                  },
                                  "displayName": "Styled(Text)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bxivhb",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <Text
                                className="sc-bxivhb hmzLRK"
                                variant="default"
                              >
                                <ForwardRef
                                  className="sc-bxivhb hmzLRK"
                                  variant="default"
                                >
                                  <styled.div
                                    className="sc-bxivhb hmzLRK"
                                    tx="text"
                                    variant="default"
                                  >
                                    <StyledComponent
                                      className="sc-bxivhb hmzLRK"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bdVaJa",
                                            "isStatic": false,
                                            "lastClassName": "myVVx",
                                            "rules": Array [
                                              "box-sizing: border-box;",
                                              "margin: 0;",
                                              "min-width: 0;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bdVaJa",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      tx="text"
                                      variant="default"
                                    >
                                      <div
                                        className="sc-bdVaJa myVVx sc-bxivhb hmzLRK"
                                      >
                                        <strong>
                                          Andreas
                                        </strong>
                                         
                                        Gasser
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ForwardRef>
                              </Text>
                            </StyledComponent>
                          </Styled(Text)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </ForwardRef>
                </Text>
              </StyledComponent>
            </Styled(Text)>
            <Styled(Text)>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ifAKCX",
                      "isStatic": false,
                      "lastClassName": "gJpexr",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Styled(Text)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-ifAKCX",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <Text
                  className="sc-ifAKCX gJpexr"
                  variant="default"
                >
                  <ForwardRef
                    className="sc-ifAKCX gJpexr"
                    variant="default"
                  >
                    <styled.div
                      className="sc-ifAKCX gJpexr"
                      tx="text"
                      variant="default"
                    >
                      <StyledComponent
                        className="sc-ifAKCX gJpexr"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "myVVx",
                              "rules": Array [
                                "box-sizing: border-box;",
                                "margin: 0;",
                                "min-width: 0;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        tx="text"
                        variant="default"
                      >
                        <div
                          className="sc-bdVaJa myVVx sc-ifAKCX gJpexr"
                        >
                          Front end architect
                          <br />
                          Senior software engineer
                          <br />
                          UX advocate
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </ForwardRef>
                </Text>
              </StyledComponent>
            </Styled(Text)>
          </div>
        </StyledComponent>
      </styled.div>
    </Header>
  </ThemeProvider>
</CustomThemeProvider>
`;
